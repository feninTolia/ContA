{"version":3,"file":"static/js/231.59056f2b.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactItem.module.css?d8e1","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/PhoneBook/PhoneBook.module.css?da4e","pages/PhoneBook/PhoneBook.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts;\nexport const selectContactsItems = state => state.contacts.contacts.items;\nexport const selectFilterdContacts = state => state.contacts.filter;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const AddContactForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  width: 50vw;\n  margin: 15px auto;\n  padding: 20px;\n  margin-bottom: 30px;\n\n  font-family: monospace;\n  color: #c9d1d9;\n  border-radius: 10px;\n`;\n\nexport const Input = styled(Field)`\n  box-sizing: border-box;\n  width: 100%;\n  margin-top: 10px;\n  border-radius: 10px;\n  font-size: 28px;\n  border: none;\n  background-color: #999;\n  padding: 5px 10px;\n  color: #2c2c2c;\n`;\n\nexport const AddContactBtn = styled.button`\n  width: 50%;\n  padding: 10px 20px;\n  align-self: center;\n\n  font-family: monospace;\n  font-size: 28px;\n  color: black;\n  border-radius: 10px;\n  border: none;\n  transition: 150ms linear;\n  background-color: #6a8623;\n\n  :hover {\n    background-color: #566d1c;\n  }\n`;\n\nexport const ErrorMesage = styled.div`\n  margin-top: 10px;\n  padding-left: 10px;\n  font-size: 18px;\n  color: #bb0f0f;\n`;\n","import { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport {\n  AddContactForm,\n  Input,\n  AddContactBtn,\n  ErrorMesage,\n} from './ContactForm.styled';\nimport { selectContacts } from 'redux/selectors';\n\nconst DisplayingErrorMessagesSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Please enter the required field')\n    .matches(/^[aA-zZ\\s]+$/, 'Only alphabets are allowed for this field '),\n  number: Yup.string()\n    .matches(\n      /^(?:\\+38)?(0\\d{9})$/,\n      'Phone number is not valid. For example 0XXXXXXXXX'\n    )\n    .required('Please enter the required field'),\n});\n\nconst ContactForm = ({ onAddContact }) => {\n  const { isLoading } = useSelector(selectContacts);\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={DisplayingErrorMessagesSchema}\n      onSubmit={(values, actions) => {\n        actions.resetForm();\n        onAddContact(values);\n      }}\n    >\n      {({ errors, touched }) => (\n        <AddContactForm noValidate>\n          <label htmlFor=\"name\">\n            Name\n            <Input type=\"text\" name=\"name\" id=\"name\" required />\n            {touched.name && errors.name && (\n              <ErrorMesage>{errors.name}</ErrorMesage>\n            )}\n          </label>\n\n          <label htmlFor=\"number\">\n            Number\n            <Input type=\"tel\" name=\"number\" id=\"number\" required />\n            {touched.number && errors.number && (\n              <ErrorMesage>{errors.number}</ErrorMesage>\n            )}\n          </label>\n\n          <AddContactBtn type=\"submit\" disabled={isLoading && true}>\n            Add contact\n          </AddContactBtn>\n        </AddContactForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  width: 30vw;\n\n  font-size: 28px;\n  box-sizing: border-box;\n  margin-top: 10px;\n  border-radius: 10px;\n  border: none;\n  background-color: #999;\n  padding: 5px 10px;\n  color: #2c2c2c;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n","import { Formik, Form } from 'formik';\nimport { Input, FilterLabel } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { addFilteredContact } from 'redux/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{ filter: '' }}\n      onSubmit={actions => {\n        actions.resetForm();\n      }}\n    >\n      {({ handleChange }) => (\n        <Form>\n          <FilterLabel htmlFor=\"filter\">\n            Find contacts by the name\n            <Input\n              name=\"filter\"\n              id=\"filter\"\n              type=\"text\"\n              onChange={e => {\n                dispatch(addFilteredContact(e.target.value));\n                handleChange(e);\n              }}\n            />\n          </FilterLabel>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"phoneBtn\":\"ContactItem_phoneBtn__aDrCl\",\"deleteBtn\":\"ContactItem_deleteBtn__iJGwj\",\"contactItem\":\"ContactItem_contactItem__akpex\"};","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport css from 'components/ContactList/ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  const { isLoading } = useSelector(selectContacts);\n\n  return (\n    <li className={css.contactItem}>\n      <a href={`tel:${number}`} className={css.phoneBtn}>\n        üìû\n      </a>\n      <span>{name} </span>\n      <span>{number} </span>\n      <button\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n        disabled={isLoading && true}\n        className={css.deleteBtn}\n      >\n        ‚ùå\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import { useSelector, useDispatch } from 'react-redux';\nimport ContactItem from './ContactItem';\nimport { deleteFilteredContact } from 'redux/contactsSlice';\nimport { deleteContact } from 'redux/contactsThunks';\nimport { selectContactsItems, selectFilterdContacts } from 'redux/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsItems);\n  const filter = useSelector(selectFilterdContacts);\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId));\n    dispatch(deleteFilteredContact(userId));\n  };\n\n  return (\n    <ul>\n      {(filter || contacts)?.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          number={number}\n          onDeleteContact={handleDeleteContact}\n          id={id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PhoneBook_wrapper__v8Rrr\",\"title\":\"PhoneBook_title__v6WEu\"};","import { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectContactsItems } from 'redux/selectors';\nimport { fetchContacts, addContact } from 'redux/contactsThunks';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport css from 'pages/PhoneBook/PhoneBook.module.css';\n\nconst PhoneBook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsItems);\n  const { isLoading, error } = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleAddContactForm = newContact => {\n    if (contacts && contacts.some(el => el.number === newContact.number)) {\n      window.alert(`${newContact.number} is already exist in your phonebook`);\n      return;\n    }\n\n    if (contacts && contacts.some(el => el.name === newContact.name)) {\n      window.alert(`${newContact.name} is already exist in your phonebook`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <h1 className={css.title}>Phonebook</h1>\n      {isLoading && (\n        <img\n          src=\"https://img.icons8.com/color/48/000000/iphone-spinner--v1.png\"\n          alt=\"üê°\"\n          className=\"rotate\"\n        />\n      )}\n      <br />\n      <ContactForm onAddContact={handleAddContactForm} />\n      {contacts.length > 0 && <h2>Contacts</h2>}\n      {contacts.length > 0 && <Filter />}\n      <ContactList />\n      {error && <h2>`Oooops, smth went wrong (√óÔπè√ó)`</h2>}\n    </div>\n  );\n};\n\nexport default PhoneBook;\n"],"names":["selectContacts","state","contacts","selectContactsItems","items","selectFilterdContacts","filter","AddContactForm","styled","Form","Input","Field","AddContactBtn","ErrorMesage","DisplayingErrorMessagesSchema","Yup","shape","name","min","max","required","matches","number","onAddContact","isLoading","useSelector","initialValues","validationSchema","onSubmit","values","actions","resetForm","errors","touched","noValidate","htmlFor","type","id","disabled","FilterLabel","dispatch","useDispatch","handleChange","onChange","e","addFilteredContact","target","value","onDeleteContact","className","css","href","onClick","handleDeleteContact","userId","deleteContact","deleteFilteredContact","map","error","useEffect","fetchContacts","src","alt","newContact","some","el","window","alert","addContact","length"],"sourceRoot":""}